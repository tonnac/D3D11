cbuffer VS_CB
{
	float4 g_Color : packoffset(c0);
	float g_Angle : packoffset(c1.x);
	float g_Time : packoffset(c1.y);
	float g_Index : packoffset(c1.z);
	float w : packoffset(c1.w)
}

float4 Rotate(in float4 pos)
{
	float2 vPos;
	vPos.x = pos.x * cos(radians(g_Angle)) + pos.y * sin(radians(g_Angle));
	vPos.y = pos.y * cos(radians(g_Angle)) - pos.x * sin(radians(g_Angle));
	return float4(vPos,0.5f,1.0f);
}

float4 getPos(in float4 pos, in uint index)
{
	float4 vPos = float4(pos);
	switch(index)
	{
		case 0: {vPos = pos;} break;
		case 1: {vPos = Rotate(pos);} break;
	}
	return vPos;
}

float4 VS(in float4 Pos : POSITION ) : SV_POSITION
{
    return float4(getPos(Pos, g_Index));
}
float4 PS(in float4 Pos : SV_POSITION ) : SV_Target
{
    return float4( g_Color.x, g_Color.y, g_Color.z, 1.0f );
}